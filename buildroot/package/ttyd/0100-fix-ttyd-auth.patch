--- ttyd-1.5.2-orig/src/protocol.c	2019-08-05 09:38:05.000000000 -0400
+++ ttyd-1.5.2-silicom/src/protocol.c	2019-11-18 20:58:28.663148356 -0500
@@ -10,6 +10,7 @@
 #include <sys/select.h>
 #include <sys/types.h>
 #include <pthread.h>
+#include <unistd.h>
 
 #if defined(__OpenBSD__) || defined(__APPLE__)
 #include <util.h>
@@ -345,7 +346,7 @@
             const char command = client->buffer[0];
 
             // check auth
-            if (server->credential != NULL && !client->authenticated && command != JSON_DATA) {
+            if (!client->authenticated && command != JSON_DATA) {
                 lwsl_warn("WS client not authenticated\n");
                 return 1;
             }
@@ -389,6 +390,35 @@
                         }
                         if (!client->authenticated) {
                             lws_close_reason(wsi, LWS_CLOSE_STATUS_POLICY_VIOLATION, NULL, 0);
+                            return -1;
+                        }
+                    }
+                    else
+                    {
+                        json_object *obj = json_tokener_parse(client->buffer);
+                        struct json_object *o = NULL;
+                        if (json_object_object_get_ex(obj, "AuthToken", &o)) {
+                            const char *token = json_object_get_string(o);
+                            char filename[128];
+                            sprintf(filename, "/tmp/ubmc-web-console-token/%s", token);
+                            if (access(filename, F_OK) == -1)
+                            {
+                                lwsl_warn("WS authentication failed with token: %s\n", token);
+                            }
+                            else
+                            {
+                                if (remove(filename) == 0)
+                                {
+                                    client->authenticated = true;
+                                }
+                                else
+                                {
+                                    lwsl_warn("WS authentication failed to delete token: %s\n", token);
+                                }
+                            }
+                        }
+                        if (!client->authenticated) {
+                            lws_close_reason(wsi, LWS_CLOSE_STATUS_POLICY_VIOLATION, NULL, 0);
                             return -1;
                         }
                     }
