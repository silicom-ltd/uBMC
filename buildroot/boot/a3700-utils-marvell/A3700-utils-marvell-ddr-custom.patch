diff -rNu a3700-utils-marvell-old/tim/ddr/DDR_TOPOLOGY_CUST.txt a3700-utils-marvell-new/tim/ddr/DDR_TOPOLOGY_CUST.txt
--- a3700-utils-marvell-old/tim/ddr/DDR_TOPOLOGY_CUST.txt	2020-06-12 17:37:56.243286465 +0800
+++ a3700-utils-marvell-new/tim/ddr/DDR_TOPOLOGY_CUST.txt	2020-06-12 17:38:55.136819924 +0800
@@ -2,25 +2,21 @@
 # This file is the input for A3700 DDR porting tool,
 # each item is one parameter for DDR topology, which will be parsed by
 # DDR tool and generate DDR register list accordingly.
-# Supported Customer boards:
-#       DDR3 1CS 512MB
+# Supported Marvell boards:
+#		DDR4 2CS : SILICOM MARVELL BOARD
 #
 
-#DDR3
-ddr_type=0
+#DDR4
+ddr_type=1
 
 #1CS
-ddr_cs_mask=1
+ddr_cs_mask=3
 
-#DDR3_1600K
-ddr_speedbin_index=12
+#DDR4_2400R
+ddr_speedbin_index=10
 
 #16BIT
 ddr_bus_width_index=2
 
-#4Gbits (512MB)
+#8Gbits (1GB)
 ddr_mem_size_index=3
-
-#800M-1600K(optional)
-ddr_cas_latency=11
-ddr_cas_write_latency=8
\ No newline at end of file
diff -rNu a3700-utils-marvell-old/wtmi/sys_init/avs.c a3700-utils-marvell-new/wtmi/sys_init/avs.c
--- a3700-utils-marvell-old/wtmi/sys_init/avs.c	2020-06-12 17:37:56.247286433 +0800
+++ a3700-utils-marvell-new/wtmi/sys_init/avs.c	2020-06-12 17:41:55.634390064 +0800
@@ -19,7 +19,7 @@
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOS
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
 * OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
@@ -200,13 +200,13 @@
 			   AVS_VDD_BASE) & AVS_VDD_MASK;
 		regval |= (vdd_otp << HIGH_VDD_LIMIT_OFF);
 		regval |= (vdd_otp << LOW_VDD_LIMIT_OFF);
-		printf("SVC REV: %d, CPU VDD voltage: %s\n", svc_rev,
-			avis_dump[vdd_otp].desc);
+		/*printf("SVC REV: %d, CPU VDD voltage: %s\n", svc_rev,
+			avis_dump[vdd_otp].desc);*/
 	} else {
 		regval |= (vdd_default << HIGH_VDD_LIMIT_OFF);
 		regval |= (vdd_default << LOW_VDD_LIMIT_OFF);
-		printf("CPU VDD voltage default value: %s\n",
-			avis_dump[vdd_default].desc);
+		/*printf("CPU VDD voltage default value: %s\n",
+			avis_dump[vdd_default].desc);*/
 	}
 
 	/* Set high&low VDD limit */
diff -rNu a3700-utils-marvell-old/wtmi/sys_init/main.c a3700-utils-marvell-new/wtmi/sys_init/main.c
--- a3700-utils-marvell-old/wtmi/sys_init/main.c	2020-06-12 17:37:56.248286426 +0800
+++ a3700-utils-marvell-new/wtmi/sys_init/main.c	2020-06-12 17:42:22.133180147 +0800
@@ -41,8 +41,10 @@
 
 #if DEBUG
 #define ddr_debug printf
+#define debug printf
 #else
 #define ddr_debug(...)
+#define debug(...)
 #endif
 
 /* DDR topology file defines the memory size by MiB. */
@@ -131,7 +133,7 @@
 	struct ddr_init_result *result_in_dram, result_in_sram;
 	u32 chksum_in_dram = 0;
 
-	printf("WTMI: system early-init\n");
+	debug("WTMI: system early-init\n");
 
 	result_in_dram = (struct ddr_init_result *)(DDR_TUNE_RESULT_MEM_BASE);
 
@@ -331,7 +333,7 @@
 	if (status)
 		return status;
 	init_printf(NULL, uart_putc);
-	printf("WTMI%s\n", VERSION);
+	debug("WTMI%s\n", VERSION);
 
 	/* Call ddrgen library */
 	sys_init_main();
